name: Build and Deploy full app

on:
  push:
    branches: reusable-actions-combine-frontend-api
  # workflow_dispatch:
  #   inputs:
  #     deploy_env:
  #       description: 'The environment to deploy to'
  #       required: true
  #       type: choice
  #       options:
  #         - dev
  #         - dev2
  #         - dev3
  #         - dev4
  #         - dev5
  #         - dev6
  #     ocr-version:
  #       description: 'The environment to deploy to'
  #       required: true

permissions:
  id-token: write
  contents: read

env:
  NODE_VERSION: 20
  REGISTRY: ghcr.io
  VERSION: derek-dev-combine
  deploy_env: dev

jobs:
  build_publish_ocr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Lowercase the repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - name: Check if image exists
        id: image_check
        run: docker manifest inspect ${{ env.REGISTRY }}/${{ env.REPO }}-ocr-api:${{ env.VERSION }} > /dev/null ; echo $?
      - name: Build and Push backend
        uses: ./.github/actions/build-publish-ocr
        if: steps.image_check.outcome == "manifest unknown"
        with:
          deploy_env: ${{ env.deploy_env }}
          token: ${{ secrets.GITHUB_TOKEN }}

  # build_frontend:
  #   runs-on: ubuntu-latest
  #   environment: ${{ env.deploy_env }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/build-frontend
  #       name: Build front-end application
  #       with:
  #         frontend_tarball: ./frontend.tgz
  #         deploy_env: ${{ env.deploy_env }}

  # prerelease_backend:
  #   runs-on: ubuntu-latest
  #   needs: [build_frontend, build_docker_ocr]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/tf-deploy
  #       name: Deploy with Terraform
  #       with:
  #         deploy_env: ${{ env.deploy_env }}
  #         azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
  #         azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
  #         azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   environment: ${{ env.deploy_env }}
  #   needs: [build_frontend]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Promote and deploy
  #       uses: ./.github/actions/deploy-frontend
  #       with:
  #         azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
  #         azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
  #         azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #         frontend_tarball: frontend.tgz
  #         deploy_env: ${{ env.deploy_env }}
  #     - name: Lowercase the repo name
  #       run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: reportvision-ocr-api-${{ env.deploy_env }}
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         images: '${{ env.REGISTRY }}/${{ env.REPO }}-ocr-api:${{ env.VERSION }}'